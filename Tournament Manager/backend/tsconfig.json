{
  "extends": "@tsconfig/strictest/tsconfig.json",
  "compilerOptions": {
    /* Language and Environment */
    "target": "ESNext",
    /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */

    /* Modules */
    /* Specify what module code is generated. */
    /* Interop Constraints */
    "module": "NodeNext",
    "esModuleInterop": true,
    /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,
    /* Ensure that casing is correct in imports. */
    "resolveJsonModule": true,
    /* Allow importing JSON into code */
    "ignoreDeprecations": "5.0",
    /* Ignore deprecation error introduced by extending the strictest Node 18 tsconfig */

    /* Type Checking */
    "strict": true,
    /* Enable all strict type-checking options. */
    "noImplicitAny": true,
    /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true,
    /* When type checking, take into account 'null' and 'undefined'. */
    "strictFunctionTypes": true,
    /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "strictBindCallApply": true,
    /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    "strictPropertyInitialization": true,
    /* Check for class properties that are declared but not set in the constructor. */
    "noImplicitThis": true,
    /* Enable error reporting when 'this' is given the type 'any'. */
    "useUnknownInCatchVariables": true,
    /* Default catch clause variables as 'unknown' instead of 'any'. */
    "alwaysStrict": true,
    /* Ensure 'use strict' is always emitted. */
    "noUnusedLocals": true,
    /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": true,
    /* Raise an error when a function parameter isn't read. */
    "noImplicitReturns": true,
    /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noFallthroughCasesInSwitch": true,
    /* Enable error reporting for fallthrough cases in switch statements. */
    "noUncheckedIndexedAccess": true,
    /* Add 'undefined' to a type when accessed using an index. */
    "noPropertyAccessFromIndexSignature": false,
    /* Enforces using indexed accessors for keys declared using an indexed type */

    "skipLibCheck": true
    /* Skip type checking all .d.ts files. */
  },
  "include": [
    "**/*.ts"
  ]
}
